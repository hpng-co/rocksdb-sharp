name: publish-packages

permissions:
  contents: read
  packages: write
  
on:
  workflow_dispatch:

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
#        source-url: https://nuget.pkg.github.com/hpng-co/index.json
#      env:
#        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#    - name: ghcr.io login
#      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u github --password-stdin

    - name: install gitversion
      uses: gittools/actions/gitversion/setup@v0.9.15
      with:
        versionSpec: '5.x'

    - name: apply version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.15
      with:
        useConfigFile: true
        configFilePath: GitVersion.yml
        updateAssemblyInfo: false

#    - name: package-cache
#      uses: actions/cache@v3
#      with:
#        path: ~/.nuget/packages
#        key: nuget-packages

    - name: restore
      run: dotnet restore

    - name: build
      run: dotnet build --no-restore -c Release /p:RunAnalyzers=False

#    - name: test
#      run: dotnet test --no-restore --no-build -c Release --filter "Category!=Integration"

    - name: pack
      run: dotnet pack --no-restore --no-build -c Release -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }}

    - name: copy packages
      run: mkdir ./nupkgs ; cp -r ./src/**/bin/Release/RocksDB*.nupkg ./nupkgs

    - name: publish packages
      if: startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/v')
      run: dotnet nuget push "*.nupkg" --api-key "${{ secrets.GITHUB_TOKEN }}" --source https://nuget.pkg.github.com/hpng-co/index.json --skip-duplicate
      working-directory: nupkgs
